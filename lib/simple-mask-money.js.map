{"version":3,"file":"simple-mask-money.js","sources":["../src/args.js","../src/core.js","../src/implanter.js","../src/index.js"],"sourcesContent":["module.exports = class Args {\n  constructor(args) {\n    this.allowNegative       = false;\n    this.decimalSeparator    = ',';\n    this.fixed               = true;\n    this.fractionDigits      = 2;\n    this.prefix              = '';\n    this.suffix              = '';\n    this.thousandsSeparator  = '.';\n    this.merge(args);\n  }\n\n  merge(args) {    \n    if (!args || typeof args !== 'object') return;\n\n    this.fixed               = typeof args.fixed === 'boolean' ? args.fixed : this.fixed;\n\n    this.allowNegative       = args.allowNegative       || this.allowNegative;\n    this.decimalSeparator    = args.decimalSeparator    || this.decimalSeparator;\n    this.fractionDigits      = args.fractionDigits      || this.fractionDigits;\n    this.prefix              = args.prefix              || args.preffix || this.prefix;\n    this.suffix              = args.suffix              || this.suffix;\n    this.thousandsSeparator  = args.thousandsSeparator  || this.thousandsSeparator;\n  }\n};\n","const Args = require('./args');\nmodule.exports = class Core {\n  constructor(args) {\n    this.args = new Args(args);\n  }\n\n  completer(size = 1) {\n    return this.args.fixed ? ''.padEnd(size, '0') : ''.padEnd(size, '_');\n  }\n\n  emptyOrInvalid() {\n    return `${this.completer()}${this.args.decimalSeparator}${this.completer(2)}`;\n  }\n\n  onlyNumber(value) {\n    let retorno = '';\n\n    for (let i = 0; i < value.length; i++) {\n      if (isFinite(value[i])) retorno += value[i];\n    }\n\n    return retorno;\n  }\n\n  addingPrefix(value) {\n    return `${this.args.prefix}${value}`;\n  }\n\n  removingPrefix(value) {\n    return value.replace(this.args.prefix, '');\n  }\n\n  addingSuffix(value) {\n    return `${value}${this.args.suffix}`;\n  }\n\n  removingSuffix(value) {\n    if (value.includes(this.args.suffix, value.length - this.args.fractionDigits)) {\n      value = value.replace(this.args.suffix, '');\n    } else {\n      value = value.substring(0, value.length - 1);\n    }\n    return value;\n  }\n\n  addingCompleterFromStart(value, completer) {\n    while (value.length < this.args.fractionDigits) {\n      value = `${completer}${value}`;\n    }\n    return value;\n  }\n\n  addingCompleterFromEnd(value, completer) {\n    while (value.length < this.args.fractionDigits) {\n      value = `${value}${completer}`;\n    }\n    return value;\n  }\n\n  removingCompleterFromStart(value, completer) {\n    while (value[0] === completer) {\n      value = value.replace(completer, '');\n    }\n    return value;\n  }\n\n  removingCompleterFromEnd(value, completer) {\n    while (value[value.length - 1] === completer) {\n      value = value.substring(0, value.length - 1);\n    }\n    return value;\n  }\n\n  addingAutoComplete(value) {\n    const n = `${value}${this.addingCompleterFromEnd('', '0')}`;\n    return n;\n  }\n\n  autoComplete(value) {\n    const regexp = new RegExp(`\\\\${this.args.decimalSeparator}`, 'g');\n    const array = value.match(regexp) || [];\n    if (array.length > 1) {\n      value = this.addingAutoComplete(value);\n    }\n    return value;\n  }\n\n  addingDecimalSeparator(value, completer, separator) {\n    let length = value.length - this.args.fractionDigits;\n\n    let regexpFraction;\n    let decimals = '$1';\n    let dezenas = completer;\n    let character = isFinite(completer) ? 'd' : 'w';\n\n    regexpFraction = `(\\\\${character}{${this.args.fractionDigits}})`;\n\n    if (length > 0) {\n      regexpFraction = `(\\\\${character}{${length}})${regexpFraction}`;\n      dezenas = decimals;\n      decimals = '$2';\n    }\n\n    return value.replace(\n      new RegExp(regexpFraction),\n      `${dezenas}${separator}${decimals}`\n    );\n  }\n\n  addingHundredsSeparator(value) {\n    let size = value.length - this.args.fractionDigits;\n    let hundreds = Math.ceil(size / 3);\n    let regexpHundreds = '(\\\\d)';\n\n    let replacement = `${this.args.decimalSeparator}$${hundreds + 1}`;\n\n    for (let i = hundreds; i !== 0; i--) {\n      if (size >= 3) {\n        regexpHundreds = `(\\\\d{3})${regexpHundreds}`;\n        size -= 3;\n      } else {\n        regexpHundreds = `(\\\\d{${size}})${regexpHundreds}`;\n      }\n\n      if (i > 1) {\n        replacement = `${this.args.thousandsSeparator}$${i}${replacement}`;\n      } else {\n        replacement = `$${i}${replacement}`;\n      }\n    }\n\n    return value.replace(new RegExp(regexpHundreds), replacement);\n  }\n\n  removeSeparator(value, separator) {\n    return value.replace(new RegExp(`\\\\${separator}`, 'g'), '');\n  }\n\n  formatDecimal(value, completer, separator) {\n    value = this.addingCompleterFromStart(value, completer);\n    value = this.addingDecimalSeparator(value, completer, separator);\n    return value;\n  }\n\n  textToNumber(input) {\n    let retorno = input.toString();\n    let completer = this.completer();\n\n    if (this.args.prefix) {\n      retorno = this.removingPrefix(retorno);\n    }\n\n    if (this.args.suffix) {\n      retorno = this.removingSuffix(retorno);\n    }\n\n    retorno = this.removeSeparator(retorno, this.args.thousandsSeparator);\n    retorno = this.removeSeparator(retorno, this.args.decimalSeparator);\n\n    retorno = this.onlyNumber(retorno);\n\n    retorno = this.removingCompleterFromStart(\n      retorno,\n      completer\n    );\n\n    return retorno || (this.args.fixed ? '0' : '');\n  }\n\n  numberToText(input) {\n    let retorno = this.emptyOrInvalid();\n\n    if (parseFloat(input) !== 'NaN') {\n      if (input.length <= this.args.fractionDigits) {\n        retorno = this.formatDecimal(\n          input,\n          this.completer(),\n          this.args.decimalSeparator\n        );\n      } else {\n        retorno = this.addingHundredsSeparator(input);\n      }\n    }\n\n    if (this.args.prefix) {\n      retorno = this.addingPrefix(retorno);\n    }\n    if (this.args.suffix) {\n      retorno = this.addingSuffix(retorno);\n    }\n\n    return retorno;\n  }\n};\n","module.exports = {\n  getCaretPosition(input) {\n    let position = -1;\n    if ('selectionStart' in input) {\n      position = input.selectionStart;\n    } else if (document.selection) {\n      input.focus();\n      const range = document.selection.createRange();\n      const length = document.selection.createRange().text.length;\n      range.moveStart('character', -input.value.length);\n      position = range.text.length - length;\n    }\n    return position;\n  },\n  setCaretPosition(input, index) {\n    if (input.setSelectionRange) {\n      input.focus();\n      input.setSelectionRange(index, index);\n    } else if (input.createTextRange) {\n      const range = input.createTextRange();\n      range.collapse(true);\n      range.moveEnd('character', index);\n      range.moveStart('character', index);\n      range.select();\n    }\n  },\n  indexMove(newValue, oldValue) {\n    let move;\n    switch (true) {\n      case oldValue.length < newValue.length:\n        move = - 1;\n        break;\n      case oldValue.length > newValue.length:\n        move = 1;\n        break;\n      default:\n        move = 0;\n        break;\n    }\n    return move;\n  }\n};\n","const Args = require('./args');\nconst Core = require('./core');\nconst implanter = require('./implanter');\n\nlet _args = new Args();\nlet _core = new Core(_args);\n\nmodule.exports = class SimpleMaskMoney {\n\n  constructor() {\n    _args = new Args();\n    _core = new Core(_args);\n    Object.defineProperty(this, 'args', {\n      get() {\n        return _args;\n      },\n      set(value) {\n        _args = new Args(value);\n        _core = new Core(_args);\n      }\n    });\n    this.formatToNumber = SimpleMaskMoney.formatToNumber;\n    this.format = SimpleMaskMoney.format;\n    this.setMask = SimpleMaskMoney.setMask;\n  }\n\n  static get args() {\n    return _args;\n  }\n\n  static set args(value) {\n    _args = new Args(value);\n    _core = new Core(_args);\n  }\n\n  static format(value) {\n    const negative = this.args.allowNegative && value.indexOf('-') !== -1;    \n    const formatation = _core.numberToText(_core.textToNumber(value));\n    return `${negative ? '-': ''}${formatation}`;\n  }\n\n  static formatToNumber(input) {\n    let retorno = '0';\n    let value = _core.textToNumber(input);\n    const negative = this.args.allowNegative && input.indexOf('-') !== -1;   \n    \n    if (negative) {\n      value.replace('-', '');\n    }\n\n    if (parseFloat(value) !== 'NaN') {\n      if (value.length <= _args.fractionDigits) {\n        value = _core.formatDecimal(value, '0', '.');\n      } else {\n        let lengthWithoutDecimals = value.length - _args.fractionDigits;\n        value = value.replace(\n          new RegExp(\n            `(\\\\d{${lengthWithoutDecimals}})(\\\\d{${_args.fractionDigits}})`\n          ),\n          '$1.$2'\n        );\n      }\n\n      retorno = value;\n    }\n      \n    return parseFloat(negative ? retorno * -1 : retorno);\n  }\n\n  static setMask(element, args) {\n    if (typeof document === 'undefined') throw 'This function only works on client side';\n\n    const input = typeof element == 'string' ? document.querySelector(element) : element;    \n\n    if (args) SimpleMaskMoney.args = args;\n\n    input.addEventListener('input', e => {\n      const oldValue = input.value;\n      const newValue = SimpleMaskMoney.format(oldValue);\n      const position = implanter.getCaretPosition(input);\n      const move = implanter.indexMove(newValue, oldValue);\n      \n      input.value = newValue;\n      input._value = newValue;\n      \n      implanter.setCaretPosition(input, position - move);\n\n      !(e instanceof Event) && input.dispatchEvent(new Event('input'));\n    });\n\n    input['formatToNumber'] = () => SimpleMaskMoney.formatToNumber(input.value);\n\n    return input;\n  }\n};\n"],"names":["module","args","allowNegative","decimalSeparator","fixed","fractionDigits","prefix","suffix","thousandsSeparator","merge","preffix","Args","size","padEnd","completer","value","retorno","i","length","isFinite","replace","includes","substring","n","addingCompleterFromEnd","regexp","RegExp","array","match","addingAutoComplete","separator","regexpFraction","decimals","dezenas","character","hundreds","Math","ceil","regexpHundreds","replacement","addingCompleterFromStart","addingDecimalSeparator","input","toString","removingPrefix","removingSuffix","removeSeparator","onlyNumber","removingCompleterFromStart","emptyOrInvalid","parseFloat","formatDecimal","addingHundredsSeparator","addingPrefix","addingSuffix","position","selectionStart","document","selection","focus","range","createRange","text","moveStart","index","setSelectionRange","createTextRange","collapse","moveEnd","select","newValue","oldValue","move","_args","_core","Core","defineProperty","formatToNumber","SimpleMaskMoney","format","setMask","negative","indexOf","formatation","numberToText","textToNumber","lengthWithoutDecimals","element","querySelector","addEventListener","implanter","getCaretPosition","indexMove","_value","setCaretPosition","e","Event","dispatchEvent"],"mappings":"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"}