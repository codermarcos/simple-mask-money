{"version":3,"sources":["webpack://SimpleMaskMoney/webpack/universalModuleDefinition","webpack://SimpleMaskMoney/webpack/bootstrap","webpack://SimpleMaskMoney/./src/args.js","webpack://SimpleMaskMoney/./src/core.js","webpack://SimpleMaskMoney/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_class","args","_classCallCheck","this","decimalSeparator","fixed","fractionDigits","prefix","suffix","thousandsSeparator","merge","_typeof","preffix","_args","_args2","default","size","arguments","length","undefined","padEnd","completer","retorno","isFinite","replace","includes","substring","addingCompleterFromEnd","regexp","RegExp","match","addingAutoComplete","separator","regexpFraction","decimals","dezenas","character","hundreds","Math","ceil","regexpHundreds","replacement","addingCompleterFromStart","addingDecimalSeparator","input","toString","removingPrefix","removingSuffix","removeSeparator","onlyNumber","removingCompleterFromStart","emptyOrInvalid","parseFloat","formatDecimal","addingHundredsSeparator","addingPrefix","addingSuffix","SimpleMaskMoney","_this","_args3","_core","_core3","set","format","numberToText","textToNumber","formatToNumber","lengthWithoutDecimals","setMask","element","document","querySelector","addEventListener"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,gBAAAD,IAEAD,EAAA,gBAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,yiBCjFE,SAAAC,EAAYC,gGAAMC,CAAAC,KAAAH,GAChBG,KAAKC,iBAAsB,IAC3BD,KAAKE,OAAsB,EAC3BF,KAAKG,eAAsB,EAC3BH,KAAKI,OAAsB,GAC3BJ,KAAKK,OAAsB,GAC3BL,KAAKM,mBAAsB,IAC3BN,KAAKO,MAAMT,2CAGPA,GACCA,GAAwB,iBAAhB,IAAOA,EAAP,YAAAU,EAAOV,MAEpBE,KAAKE,MAA4C,kBAAfJ,EAAKI,MAAsBJ,EAAKI,MAAQF,KAAKE,MAE/EF,KAAKC,iBAAsBH,EAAKG,kBAAuBD,KAAKC,iBAC5DD,KAAKG,eAAsBL,EAAKK,gBAAuBH,KAAKG,eAC5DH,KAAKI,OAAsBN,EAAKM,QAAuBN,EAAKW,SAAWT,KAAKI,OAC5EJ,KAAKK,OAAsBP,EAAKO,QAAuBL,KAAKK,OAC5DL,KAAKM,mBAAsBR,EAAKQ,oBAAuBN,KAAKM,mXCpBhEI,EAAA/C,EAAA,wDAEE,SAAAkC,EAAYC,gGAAMC,CAAAC,KAAAH,GAChBG,KAAKF,KAAO,IAAAa,EAAAC,QAASd,iDAGH,IAAVe,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EACf,OAAOd,KAAKF,KAAKI,MAAQ,GAAGe,OAAOJ,EAAM,KAAO,GAAGI,OAAOJ,EAAM,8CAIhE,SAAUb,KAAKkB,YAAclB,KAAKF,KAAKG,iBAAmBD,KAAKkB,UAAU,sCAGhEpC,GAGT,IAFA,IAAIqC,EAAU,GAELtD,EAAI,EAAGA,EAAIiB,EAAMiC,OAAQlD,IAC5BuD,SAAStC,EAAMjB,MAAKsD,GAAWrC,EAAMjB,IAG3C,OAAOsD,uCAGIrC,GACX,SAAUkB,KAAKF,KAAKM,OAAStB,yCAGhBA,GACb,OAAOA,EAAMuC,QAAQrB,KAAKF,KAAKM,OAAQ,yCAG5BtB,GACX,SAAUA,EAAQkB,KAAKF,KAAKO,8CAGfvB,GAMb,OAJEA,EADEA,EAAMwC,SAAStB,KAAKF,KAAKO,OAAQvB,EAAMiC,OAASf,KAAKF,KAAKK,gBACpDrB,EAAMuC,QAAQrB,KAAKF,KAAKO,OAAQ,IAEhCvB,EAAMyC,UAAU,EAAGzC,EAAMiC,OAAS,oDAKrBjC,EAAOoC,GAC9B,KAAOpC,EAAMiC,OAASf,KAAKF,KAAKK,gBAC9BrB,KAAWoC,EAAYpC,EAEzB,OAAOA,iDAGcA,EAAOoC,GAC5B,KAAOpC,EAAMiC,OAASf,KAAKF,KAAKK,gBAC9BrB,KAAWA,EAAQoC,EAErB,OAAOpC,qDAGkBA,EAAOoC,GAChC,KAAOpC,EAAM,KAAOoC,GAClBpC,EAAQA,EAAMuC,QAAQH,EAAW,IAEnC,OAAOpC,mDAGgBA,EAAOoC,GAC9B,KAAOpC,EAAMA,EAAMiC,OAAS,KAAOG,GACjCpC,EAAQA,EAAMyC,UAAU,EAAGzC,EAAMiC,OAAS,GAE5C,OAAOjC,6CAGUA,GAEjB,MADMQ,GAAOR,EAAQkB,KAAKwB,uBAAuB,GAAI,0CAI1C1C,GACX,IAAM2C,EAAS,IAAIC,OAAJ,KAAgB1B,KAAKF,KAAKG,iBAAoB,KAK7D,OAJcnB,EAAM6C,MAAMF,QAChBV,OAAS,IACjBjC,EAAQkB,KAAK4B,mBAAmB9C,IAE3BA,iDAGcA,EAAOoC,EAAWW,GACvC,IAAId,EAASjC,EAAMiC,OAASf,KAAKF,KAAKK,eAElC2B,SACAC,EAAW,KACXC,EAAUd,EACVe,EAAYb,SAASF,GAAa,IAAM,IAU5C,OARAY,QAAuBG,EAAvB,IAAoCjC,KAAKF,KAAKK,eAA9C,KAEIY,EAAS,IACXe,QAAuBG,EAAvB,IAAoClB,EAApC,KAA+Ce,EAC/CE,EAAUD,EACVA,EAAW,MAGNjD,EAAMuC,QACX,IAAIK,OAAOI,GADN,GAEFE,EAAUH,EAAYE,mDAILjD,GAOtB,IANA,IAAI+B,EAAO/B,EAAMiC,OAASf,KAAKF,KAAKK,eAChC+B,EAAWC,KAAKC,KAAKvB,EAAO,GAC5BwB,EAAiB,QAEjBC,EAAiBtC,KAAKF,KAAKG,iBAA3B,KAA+CiC,EAAW,GAErDrE,EAAIqE,EAAgB,IAANrE,EAASA,IAC1BgD,GAAQ,GACVwB,aAA4BA,EAC5BxB,GAAQ,GAERwB,UAAyBxB,EAAzB,KAAkCwB,EAIlCC,EADEzE,EAAI,EACWmC,KAAKF,KAAKQ,mBAA3B,IAAiDzC,EAAIyE,EAErDA,IAAkBzE,EAAIyE,EAI1B,OAAOxD,EAAMuC,QAAQ,IAAIK,OAAOW,GAAiBC,2CAGnCxD,EAAO+C,GACrB,OAAO/C,EAAMuC,QAAQ,IAAIK,OAAJ,KAAgBG,EAAa,KAAM,0CAG5C/C,EAAOoC,EAAWW,GAG9B,OAFA/C,EAAQkB,KAAKuC,yBAAyBzD,EAAOoC,GAC7CpC,EAAQkB,KAAKwC,uBAAuB1D,EAAOoC,EAAWW,wCAI3CY,GACX,IAAItB,EAAUsB,EAAMC,WAChBxB,EAAYlB,KAAKkB,YAoBrB,OAlBIlB,KAAKF,KAAKM,SACZe,EAAUnB,KAAK2C,eAAexB,IAG5BnB,KAAKF,KAAKO,SACZc,EAAUnB,KAAK4C,eAAezB,IAGhCA,EAAUnB,KAAK6C,gBAAgB1B,EAASnB,KAAKF,KAAKQ,oBAClDa,EAAUnB,KAAK6C,gBAAgB1B,EAASnB,KAAKF,KAAKG,kBAElDkB,EAAUnB,KAAK8C,WAAW3B,IAE1BA,EAAUnB,KAAK+C,2BACb5B,EACAD,MAGiBlB,KAAKF,KAAKI,MAAQ,IAAM,yCAGhCuC,GACX,IAAItB,EAAUnB,KAAKgD,iBAqBnB,MAnB0B,QAAtBC,WAAWR,KAEXtB,EADEsB,EAAM1B,QAAUf,KAAKF,KAAKK,eAClBH,KAAKkD,cACbT,EACAzC,KAAKkB,YACLlB,KAAKF,KAAKG,kBAGFD,KAAKmD,wBAAwBV,IAIvCzC,KAAKF,KAAKM,SACZe,EAAUnB,KAAKoD,aAAajC,IAE1BnB,KAAKF,KAAKO,SACZc,EAAUnB,KAAKqD,aAAalC,IAGvBA,+HC/LX,QAAAxD,EAAA,QACAA,EAAA,2DAEa2F,oBACX,SAAAA,IAAc,IAAAC,EAAAvD,kGAAAD,CAAAC,KAAAsD,GACZ,IAAI5C,EAAQ,IAAA8C,EAAA5C,QACR6C,EAAQ,IAAAC,EAAA9C,QAASF,GAErBnC,OAAOC,eAAewB,KAAM,QAC1BtB,IADkC,WAEhC,OAAOgC,GAETiD,IAJkC,SAI9B7E,GACF4B,EAAQ,IAAA8C,EAAA5C,QAAS9B,GACjB2E,EAAQ,IAAAC,EAAA9C,QAASF,MAIrBV,KAAK4D,OAAS,SAAC9E,GACb,OAAO2E,EAAMI,aAAaJ,EAAMK,aAAahF,KAG/CkB,KAAK+D,eAAiB,SAACtB,GACrB,IAAItB,EAAU,IACVrC,EAAQ2E,EAAMK,aAAarB,GAE/B,GAA0B,QAAtBQ,WAAWnE,GAAkB,CAC/B,GAAIA,EAAMiC,QAAUL,EAAMP,eACxBrB,EAAQ2E,EAAMP,cAAcpE,EAAO,IAAK,SACnC,CACL,IAAIkF,EAAwBlF,EAAMiC,OAASL,EAAMP,eACjDrB,EAAQA,EAAMuC,QACZ,IAAIK,OAAJ,QACUsC,EADV,UACyCtD,EAAMP,eAD/C,MAGA,SAIJgB,EAAUrC,EAGZ,OAAOmE,WAAW9B,IAGpBnB,KAAKiE,QAAU,SAACC,EAASpE,GACvB,IAAI2C,EAA0B,iBAAXyB,EAAsBC,SAASC,cAAcF,GAAWA,EAc3E,OAZIpE,IAAMyD,EAAKzD,KAAOA,GAEtB2C,EAAM4B,iBAAiB,WAAY,WACjC5B,EAAM3D,MAAQyE,EAAKK,OAAOnB,EAAM3D,SAElC2D,EAAM4B,iBAAiB,QAAS,WAC9B5B,EAAM3D,MAAQyE,EAAKK,OAAOnB,EAAM3D,SAElC2D,EAAA,eAA0B,WACxB,OAAOc,EAAKQ,eAAetB,EAAM3D,QAG5B2D,IAKbnF,EAAOD,QAAU,IAAIiG","file":"simple-mask-money.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleMaskMoney\"] = factory();\n\telse\n\t\troot[\"SimpleMaskMoney\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export default class {\r\n  constructor(args) {\r\n    this.decimalSeparator    = ',';\r\n    this.fixed               = true;\r\n    this.fractionDigits      = 2;\r\n    this.prefix              = '';\r\n    this.suffix              = '';\r\n    this.thousandsSeparator  = '.';\r\n    this.merge(args);\r\n  }\r\n\r\n  merge(args) {    \r\n    if (!args || typeof args !== 'object') return;\r\n\r\n    this.fixed               = typeof args.fixed === 'boolean' ? args.fixed : this.fixed;\r\n\r\n    this.decimalSeparator    = args.decimalSeparator    || this.decimalSeparator;\r\n    this.fractionDigits      = args.fractionDigits      || this.fractionDigits;\r\n    this.prefix              = args.prefix              || args.preffix || this.prefix;\r\n    this.suffix              = args.suffix              || this.suffix;\r\n    this.thousandsSeparator  = args.thousandsSeparator  || this.thousandsSeparator;\r\n  }\r\n}\r\n","import Args from './args';\r\nexport default class {\r\n  constructor(args) {\r\n    this.args = new Args(args);\r\n  }\r\n\r\n  completer(size = 1) {\r\n    return this.args.fixed ? ''.padEnd(size, '0') : ''.padEnd(size, '_');\r\n  }\r\n\r\n  emptyOrInvalid() {\r\n    return `${this.completer()}${this.args.decimalSeparator}${this.completer(2)}`;\r\n  }\r\n\r\n  onlyNumber(value) {\r\n    let retorno = '';\r\n\r\n    for (let i = 0; i < value.length; i++) {\r\n      if (isFinite(value[i])) retorno += value[i];\r\n    }\r\n\r\n    return retorno;\r\n  }\r\n\r\n  addingPrefix(value) {\r\n    return `${this.args.prefix}${value}`;\r\n  }\r\n\r\n  removingPrefix(value) {\r\n    return value.replace(this.args.prefix, '');\r\n  }\r\n\r\n  addingSuffix(value) {\r\n    return `${value}${this.args.suffix}`;\r\n  }\r\n\r\n  removingSuffix(value) {\r\n    if (value.includes(this.args.suffix, value.length - this.args.fractionDigits)) {\r\n      value = value.replace(this.args.suffix, '');\r\n    } else {\r\n      value = value.substring(0, value.length - 1);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  addingCompleterFromStart(value, completer) {\r\n    while (value.length < this.args.fractionDigits) {\r\n      value = `${completer}${value}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  addingCompleterFromEnd(value, completer) {\r\n    while (value.length < this.args.fractionDigits) {\r\n      value = `${value}${completer}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  removingCompleterFromStart(value, completer) {\r\n    while (value[0] === completer) {\r\n      value = value.replace(completer, '');\r\n    }\r\n    return value;\r\n  }\r\n\r\n  removingCompleterFromEnd(value, completer) {\r\n    while (value[value.length - 1] === completer) {\r\n      value = value.substring(0, value.length - 1);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  addingAutoComplete(value) {\r\n    const n = `${value}${this.addingCompleterFromEnd('', '0')}`;\r\n    return n;\r\n  }\r\n\r\n  autoComplete(value) {\r\n    const regexp = new RegExp(`\\\\${this.args.decimalSeparator}`, 'g');\r\n    const array = value.match(regexp) || [];\r\n    if (array.length > 1) {\r\n      value = this.addingAutoComplete(value);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  addingDecimalSeparator(value, completer, separator) {\r\n    let length = value.length - this.args.fractionDigits;\r\n\r\n    let regexpFraction;\r\n    let decimals = '$1';\r\n    let dezenas = completer;\r\n    let character = isFinite(completer) ? 'd' : 'w';\r\n\r\n    regexpFraction = `(\\\\${character}{${this.args.fractionDigits}})`;\r\n\r\n    if (length > 0) {\r\n      regexpFraction = `(\\\\${character}{${length}})${regexpFraction}`;\r\n      dezenas = decimals;\r\n      decimals = '$2';\r\n    }\r\n\r\n    return value.replace(\r\n      new RegExp(regexpFraction),\r\n      `${dezenas}${separator}${decimals}`\r\n    );\r\n  }\r\n\r\n  addingHundredsSeparator(value) {\r\n    let size = value.length - this.args.fractionDigits;\r\n    let hundreds = Math.ceil(size / 3);\r\n    let regexpHundreds = '(\\\\d)';\r\n\r\n    let replacement = `${this.args.decimalSeparator}$${hundreds + 1}`;\r\n\r\n    for (let i = hundreds; i !== 0; i--) {\r\n      if (size >= 3) {\r\n        regexpHundreds = `(\\\\d{3})${regexpHundreds}`;\r\n        size -= 3;\r\n      } else {\r\n        regexpHundreds = `(\\\\d{${size}})${regexpHundreds}`;\r\n      }\r\n\r\n      if (i > 1) {\r\n        replacement = `${this.args.thousandsSeparator}$${i}${replacement}`;\r\n      } else {\r\n        replacement = `$${i}${replacement}`;\r\n      }\r\n    }\r\n\r\n    return value.replace(new RegExp(regexpHundreds), replacement);\r\n  }\r\n\r\n  removeSeparator(value, separator) {\r\n    return value.replace(new RegExp(`\\\\${separator}`, 'g'), '');\r\n  }\r\n\r\n  formatDecimal(value, completer, separator) {\r\n    value = this.addingCompleterFromStart(value, completer);\r\n    value = this.addingDecimalSeparator(value, completer, separator);\r\n    return value;\r\n  }\r\n\r\n  textToNumber(input) {\r\n    let retorno = input.toString();\r\n    let completer = this.completer();\r\n\r\n    if (this.args.prefix) {\r\n      retorno = this.removingPrefix(retorno);\r\n    }\r\n\r\n    if (this.args.suffix) {\r\n      retorno = this.removingSuffix(retorno);\r\n    }\r\n\r\n    retorno = this.removeSeparator(retorno, this.args.thousandsSeparator);\r\n    retorno = this.removeSeparator(retorno, this.args.decimalSeparator);\r\n\r\n    retorno = this.onlyNumber(retorno);\r\n\r\n    retorno = this.removingCompleterFromStart(\r\n      retorno,\r\n      completer\r\n    );\r\n\r\n    return retorno || (this.args.fixed ? '0' : '');\r\n  }\r\n\r\n  numberToText(input) {\r\n    let retorno = this.emptyOrInvalid();\r\n\r\n    if (parseFloat(input) !== 'NaN') {\r\n      if (input.length <= this.args.fractionDigits) {\r\n        retorno = this.formatDecimal(\r\n          input,\r\n          this.completer(),\r\n          this.args.decimalSeparator\r\n        );\r\n      } else {\r\n        retorno = this.addingHundredsSeparator(input);\r\n      }\r\n    }\r\n\r\n    if (this.args.prefix) {\r\n      retorno = this.addingPrefix(retorno);\r\n    }\r\n    if (this.args.suffix) {\r\n      retorno = this.addingSuffix(retorno);\r\n    }\r\n\r\n    return retorno;\r\n  }\r\n}\r\n","import Args from './args';\r\nimport Core from './core';\r\n\r\nexport class SimpleMaskMoney {\r\n  constructor() {\r\n    let _args = new Args();\r\n    let _core = new Core(_args);\r\n\r\n    Object.defineProperty(this, 'args', {\r\n      get() {\r\n        return _args;\r\n      },\r\n      set(value) {\r\n        _args = new Args(value);\r\n        _core = new Core(_args);\r\n      }\r\n    });\r\n\r\n    this.format = (value) => {\r\n      return _core.numberToText(_core.textToNumber(value));\r\n    };\r\n\r\n    this.formatToNumber = (input) => {\r\n      let retorno = '0';\r\n      let value = _core.textToNumber(input);\r\n\r\n      if (parseFloat(value) !== 'NaN') {\r\n        if (value.length <= _args.fractionDigits) {\r\n          value = _core.formatDecimal(value, '0', '.');\r\n        } else {\r\n          let lengthWithoutDecimals = value.length - _args.fractionDigits;\r\n          value = value.replace(\r\n            new RegExp(\r\n              `(\\\\d{${lengthWithoutDecimals}})(\\\\d{${_args.fractionDigits}})`\r\n            ),\r\n            '$1.$2'\r\n          );\r\n        }\r\n\r\n        retorno = value;\r\n      }\r\n\r\n      return parseFloat(retorno);\r\n    };\r\n\r\n    this.setMask = (element, args) => {\r\n      let input = typeof element == 'string' ? document.querySelector(element) : element;\r\n\r\n      if (args) this.args = args;\r\n\r\n      input.addEventListener('keypress', () => {\r\n        input.value = this.format(input.value);\r\n      });\r\n      input.addEventListener('input', () => {\r\n        input.value = this.format(input.value);\r\n      });\r\n      input['formatToNumber'] = () => {\r\n        return this.formatToNumber(input.value);\r\n      };\r\n\r\n      return input;\r\n    };\r\n  }\r\n}\r\n\r\nmodule.exports = new SimpleMaskMoney();\r\n"],"sourceRoot":""}