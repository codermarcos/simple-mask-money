{"version":3,"file":"simple-mask-money.js","sources":["../src/args.js","../src/core.js","../src/implanter.js","../src/index.js"],"sourcesContent":["module.exports = class Args {\r\n  constructor(args) {\r\n    this.allowNegative       = false;    \r\n    this.negativeSignAfter   = false;\r\n    this.decimalSeparator    = ',';\r\n    this.fixed               = true;\r\n    this.fractionDigits      = 2;\r\n    this.prefix              = '';\r\n    this.suffix              = '';\r\n    this.thousandsSeparator  = '.';\r\n    this.cursor              = 'move';\r\n\r\n    this.merge(args);\r\n  }\r\n\r\n  merge(args) {\r\n    if (!args || typeof args !== 'object') return;\r\n\r\n    this.fixed               = typeof args.fixed             === 'boolean' ? args.fixed             : this.fixed;\r\n    this.allowNegative       = typeof args.allowNegative     === 'boolean' ? args.allowNegative     : this.allowNegative;    \r\n    this.negativeSignAfter   = typeof args.negativeSignAfter === 'boolean' ? args.negativeSignAfter : this.negativeSignAfter;\r\n\r\n    this.decimalSeparator    = typeof args.decimalSeparator   === 'undefined' ? this.decimalSeparator   : args.decimalSeparator;\r\n    this.fractionDigits      = typeof args.fractionDigits     === 'undefined' ? this.fractionDigits     : args.fractionDigits;\r\n    this.prefix              = typeof args.prefix             === 'undefined' ? this.prefix             : args.prefix;\r\n    this.suffix              = typeof args.suffix             === 'undefined' ? this.suffix             : args.suffix;\r\n    this.thousandsSeparator  = typeof args.thousandsSeparator === 'undefined' ? this.thousandsSeparator : args.thousandsSeparator;\r\n    this.cursor              = typeof args.cursor             === 'undefined' ? this.cursor             : args.cursor;\r\n  }\r\n};\r\n","const Args = require('./args');\r\nmodule.exports = class Core {\r\n  constructor(args) {\r\n    this.args = new Args(args);\r\n  }\r\n\r\n  isFloat(number) {\r\n    return number % 1 !== 0;\r\n  }\r\n\r\n  completer(size = 1) {\r\n    return this.args.fixed ? ''.padEnd(size, '0') : ''.padEnd(size, '_');\r\n  }\r\n\r\n  emptyOrInvalid() {\r\n    return `${this.completer()}${this.args.decimalSeparator}${this.completer(this.args.fractionDigits)}`;\r\n  }\r\n\r\n  onlyNumber(value) {\r\n    const hasDecimalSeparator = value.toString().indexOf(this.args.decimalSeparator);\r\n    let putDecimalSeparator = false;\r\n    let retorno = '';\r\n\r\n    for (let i = value.length - 1; i >= 0; i--) {\r\n      if (isFinite(value[i])) {\r\n        retorno = value[i] + retorno;\r\n      } else if (hasDecimalSeparator !== -1 && !putDecimalSeparator && value[i] === this.args.decimalSeparator) {\r\n        retorno = value[i].replace(this.args.decimalSeparator, '.') + retorno;\r\n        putDecimalSeparator = true;\r\n      }\r\n    }\r\n\r\n    return retorno[0] === '.' ? `0${retorno}` : retorno;\r\n  }\r\n\r\n  addingPrefix(value) {\r\n    return `${this.args.prefix}${value}`;\r\n  }\r\n\r\n  removingPrefix(value) {\r\n    const position = value.indexOf(this.args.prefix, 0);\r\n\r\n    if (position !== -1) {\r\n      value = value.substring(this.args.prefix.length, value.length);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  addingSuffix(value) {\r\n    return `${value}${this.args.suffix}`;\r\n  }\r\n\r\n  removingSuffix(value) {\r\n    const position = value.indexOf(this.args.suffix, value.length - this.args.suffix.length);\r\n\r\n    if (position !== -1) {\r\n      const start = value.substring(0, position);\r\n      value = start + value.substring(start.length + this.args.suffix.length - 1, value.length - 1);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  addingCompleter(value, completer, length, start = true) {\r\n    while (value.length < length) {\r\n      value = start ? `${completer}${value}` : `${value}${completer}`;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  removingCompleter(value, completer, start = true) {\r\n    const position = start ? 0 : value.length - 1;\r\n\r\n    while (value[position] === completer) {\r\n      value = value.substring(0, position - 1) + value.substring(position + 1, value.length);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  addingSeparators(value) {\r\n    let size = value.length - this.args.fractionDigits;\r\n    let character = this.args.fixed ? 'd' : 'w';\r\n    let regexp = `\\\\,?||\\\\.?(\\\\${character})`;\r\n    let hundreds = Math.ceil(size / 3);\r\n\r\n    let replacement = `${this.args.decimalSeparator}$${hundreds + 1}`;\r\n\r\n    for (let i = hundreds; i !== 0; i--) {\r\n      if (size >= 3) {\r\n        regexp = `(\\\\${character}{3})${regexp}`;\r\n        size -= 3;\r\n      } else {\r\n        regexp = `(\\\\${character}{${size}})${regexp}`;\r\n      }\r\n\r\n      if (i > 1) {\r\n        replacement = `${this.args.thousandsSeparator}$${i}${replacement}`;\r\n      } else {\r\n        replacement = `$${i}${replacement}`;\r\n      }\r\n    }\r\n\r\n    return value.replace(new RegExp(regexp), replacement);\r\n  }\r\n\r\n  replaceSeparator(value, separator, replacer = '') {\r\n    return value.replace(new RegExp(`\\\\${separator}`, 'g'), replacer);\r\n  }\r\n\r\n  adjustDotPosition(value) {\r\n    let fractionDigits;\r\n    let retorno = value.toString();\r\n\r\n    retorno = retorno.replace('.', '');\r\n    fractionDigits = retorno.length - this.args.fractionDigits;\r\n    retorno = `${retorno.substring(0, fractionDigits)}.${retorno.substring(fractionDigits)}`;\r\n\r\n    return retorno;\r\n  }\r\n\r\n  checkNumberStart(value) {\r\n    const retorno = value.toString();\r\n    return retorno[0] === '.' ? `0${retorno}` : retorno;\r\n  }\r\n\r\n  textToNumber(value, input) {\r\n    let retorno = value.toString();\r\n    let completer = this.completer();\r\n\r\n    if (this.args.prefix) {\r\n      retorno = this.removingPrefix(retorno);\r\n    }\r\n\r\n    if (this.args.suffix) {\r\n      retorno = this.removingSuffix(retorno);\r\n    }\r\n\r\n    retorno = this.onlyNumber(retorno);\r\n\r\n    if (retorno) {\r\n      if (input) {\r\n        retorno = this.adjustDotPosition(retorno);\r\n      }\r\n\r\n      retorno = this.removingCompleter(retorno, completer);\r\n\r\n      retorno = this.checkNumberStart(retorno);\r\n    }\r\n\r\n    return retorno || (this.args.fixed ? '0' : '');\r\n  }\r\n\r\n  numberToText(value, input) {\r\n    let retorno = this.emptyOrInvalid();\r\n    value = this.replaceSeparator(value.toString(), this.args.decimalSeparator, '.');\r\n\r\n    if (!isNaN(parseFloat(value))) {\r\n      if (this.isFloat(value)) {\r\n        const number = value.split('.');\r\n        let hundreds = number[0];\r\n        let decimals = number[1];\r\n\r\n        decimals = this.addingCompleter(decimals || '', this.completer(), this.args.fractionDigits, false);\r\n\r\n        retorno = `${hundreds}${decimals}`;\r\n      } else {\r\n        retorno = this.replaceSeparator(value, '.');\r\n        retorno = this.addingCompleter(retorno || '', this.completer(), this.args.fractionDigits);\r\n        retorno = this.args.fractionDigits >= retorno.length ? `${this.completer()}${retorno}` : retorno;\r\n      }\r\n\r\n      retorno = this.addingSeparators(retorno);\r\n    }\r\n\r\n    if (this.args.prefix) {\r\n      retorno = this.addingPrefix(retorno);\r\n    }\r\n    if (this.args.suffix) {\r\n      retorno = this.addingSuffix(retorno);\r\n    }\r\n\r\n    return retorno;\r\n  }\r\n};\r\n","module.exports = {\r\n  getCaretPosition(input) {\r\n    let position = -1;\r\n    if ('selectionStart' in input) {\r\n      position = input.selectionStart;\r\n    } else if (document.selection) {\r\n      input.focus();\r\n      const range = document.selection.createRange();\r\n      const length = document.selection.createRange().text.length;\r\n      range.moveStart('character', -input.value.length);\r\n      position = range.text.length - length;\r\n    }\r\n    return position;\r\n  },\r\n\r\n  setCaretPosition(input, index) {\r\n    if (input.setSelectionRange) {\r\n      input.focus();\r\n      input.setSelectionRange(index, index);\r\n    } else if (input.createTextRange) {\r\n      const range = input.createTextRange();\r\n      range.collapse(true);\r\n      range.moveEnd('character', index);\r\n      range.moveStart('character', index);\r\n      range.select();\r\n    }\r\n  },\r\n\r\n  indexMove(newValue, oldValue) {\r\n    let move;\r\n    switch (true) {\r\n      case oldValue.length < newValue.length:\r\n        move = - 1;\r\n        break;\r\n      case oldValue.length > newValue.length:\r\n        move = 1;\r\n        break;\r\n      default:\r\n        move = 0;\r\n        break;\r\n    }\r\n    return move;\r\n  }\r\n};\r\n","const Args = require('./args');\r\nconst Core = require('./core');\r\nconst implanter = require('./implanter');\r\n\r\nlet _args = new Args();\r\nlet _core = new Core(_args);\r\n\r\nmodule.exports = class SimpleMaskMoney {\r\n  constructor() {\r\n    _args = new Args();\r\n    _core = new Core(_args);\r\n    Object.defineProperty(this, 'args', {\r\n      get() {\r\n        return _args;\r\n      },\r\n      set(value) {\r\n        _args = new Args(value);\r\n        _core = new Core(_args);\r\n      }\r\n    });\r\n    this.formatToNumber = SimpleMaskMoney.formatToNumber;\r\n    this.format = SimpleMaskMoney.format;\r\n    this.setMask = SimpleMaskMoney.setMask;\r\n  }\r\n\r\n  static get args() {\r\n    return _args;\r\n  }\r\n\r\n  static set args(value) {\r\n    _args = new Args(value);\r\n    _core = new Core(_args);\r\n  }\r\n\r\n  static format(value, input = false) {\r\n    const negative = _args.allowNegative && value.indexOf('-') !== -1;  \r\n    const formatation = _core.numberToText(_core.textToNumber(value, input));\r\n\r\n    return `${!_args.negativeSignAfter && negative ? '-': ''}${formatation}${_args.negativeSignAfter && negative ? '-': ''}`;\r\n  }\r\n\r\n  static formatToNumber(input) {\r\n    let value = input.toString(); \r\n    let retorno = '0';\r\n    const negative = _args.allowNegative && value.indexOf('-') !== -1;   \r\n    \r\n    if (negative) {\r\n      value = value.replace('-', '');\r\n    }\r\n\r\n    value = _core.textToNumber(value);\r\n    if (!isNaN(parseFloat(value))) {\r\n      retorno = value;\r\n    }\r\n      \r\n    return parseFloat(negative ? retorno * -1 : retorno);\r\n  }\r\n\r\n  static setMask(element, args) {\r\n    if (typeof document === 'undefined') throw 'This function only works on client side';\r\n\r\n    const input = typeof element == 'string' ? document.querySelector(element) : element;\r\n\r\n    if (args) {\r\n      SimpleMaskMoney.args = args;\r\n    }\r\n\r\n    input.addEventListener('input', e => {\r\n      const oldValue = input.value;\r\n      const newValue = SimpleMaskMoney.format(oldValue, true);\r\n      const caretPosition = implanter.getCaretPosition(input);\r\n      const move = implanter.indexMove(newValue, oldValue);\r\n      let newCaretPosition = caretPosition - move;\r\n      const {cursor} = SimpleMaskMoney.args;\r\n\r\n      if (cursor === 'start') {\r\n        newCaretPosition = 0;\r\n      } else if (cursor === 'end') {\r\n        newCaretPosition = newValue.length;\r\n      }\r\n\r\n      input.value = newValue;\r\n      input._value = newValue;\r\n\r\n      implanter.setCaretPosition(input, newCaretPosition);\r\n\r\n      !(e instanceof Event) && input.dispatchEvent(new Event('input'));\r\n    });\r\n\r\n    input['formatToNumber'] = () => SimpleMaskMoney.formatToNumber(input.value);\r\n\r\n    return input;\r\n  }\r\n};\r\n"],"names":["module","args","allowNegative","negativeSignAfter","decimalSeparator","fixed","fractionDigits","prefix","suffix","thousandsSeparator","cursor","merge","Args","number","size","padEnd","completer","value","hasDecimalSeparator","toString","indexOf","putDecimalSeparator","retorno","i","length","isFinite","replace","position","substring","start","character","regexp","hundreds","Math","ceil","replacement","RegExp","separator","replacer","input","removingPrefix","removingSuffix","onlyNumber","adjustDotPosition","removingCompleter","checkNumberStart","emptyOrInvalid","replaceSeparator","isNaN","parseFloat","isFloat","split","decimals","addingCompleter","addingSeparators","addingPrefix","addingSuffix","selectionStart","document","selection","focus","range","createRange","text","moveStart","index","setSelectionRange","createTextRange","collapse","moveEnd","select","newValue","oldValue","move","_args","_core","Core","defineProperty","formatToNumber","SimpleMaskMoney","format","setMask","negative","formatation","numberToText","textToNumber","element","querySelector","addEventListener","caretPosition","implanter","getCaretPosition","indexMove","newCaretPosition","_value","setCaretPosition","e","Event","dispatchEvent"],"mappings":"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"}